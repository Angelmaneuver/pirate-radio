#!/usr/bin/env python

import argparse

from flask import Flask, Response, abort, request
from streamlink import Streamlink
from streamlink.stream import StreamIO

app = Flask(__name__)

HOST = '0.0.0.0'
PORT = 8888

BUFF_SIZE = 1 << 16
PAUSE = 600

EXCEPTION_MESSAGE = 'Exception {0}: {1}\n'


@app.route('/radiko', methods=['GET'])
def radiko() -> Response:
    args = request.args.to_dict()
    option = {}

    if 'sid' not in args:
        abort(
            400,
            EXCEPTION_MESSAGE.format('Invalid parameter', 'Require sid.'),
        )
    else:
        option['sid'] = args['sid']

    option['stream'] = args['stream'] if 'stream' in args else 'best'

    streams = Streamlink().streams(
        'https://radiko.jp/#!/live/{0}'.format(option['sid'])
    )

    return Response(
        response=__streaming(streams[option['stream']].open()),
        mimetype='audio/mpeg' if isDebug() else None,
    )


@app.errorhandler(Exception)
def error(error):
    abort(
        500,
        EXCEPTION_MESSAGE.format(type(error).__name__, error),
    )


def __streaming(fd: StreamIO):
    chunk = True

    with fd:
        while chunk:
            chunk = fd.read(BUFF_SIZE)

            yield chunk


def isDebug():
    return app.config['DEBUG']


def main() -> None:
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-p',
        type=int,
        help='When you want to specific a port number.',
    )
    parser.add_argument(
        '-d',
        action='store_true',
        help='Start in debug mode.'
    )

    args = parser.parse_args()

    app.run(
        debug=args.d,
        host=HOST,
        port=args.p if args.p is not None else PORT
    )


if '__main__' == __name__:
    main()
